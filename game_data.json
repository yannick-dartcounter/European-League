from playwright.sync_api import sync_playwright
import requests
import time

# --- Instellingen ---
BRACKET_URL = "https://app.dartcounter.net/tournaments/european-league-day-2-2piSdd/bracket"
STORAGE_FILE = "dartcounter_session.json"

# --- Playwright-scraper ---
def get_game_ids():
    print("🔍 Start met laden van bracketpagina...")
    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        context = browser.new_context(storage_state=STORAGE_FILE)
        page = context.new_page()

        page.goto(BRACKET_URL)
        page.wait_for_timeout(5000)  # wacht 5 sec voor JavaScript-laad

        # Zoek elementen met data-game-id
        game_ids = set()
        elements = page.query_selector_all("[data-id]")

        for el in elements:
            game_id = el.get_attribute("data-id")
            if game_id and len(game_id) >= 5:
                game_ids.add(game_id)

        browser.close()
        print(f"✅ {len(game_ids)} wedstrijden gevonden.")
        return list(game_ids)

# --- API-oproep per game ---
def fetch_game_details(game_id):
    url = f"https://app.dartcounter.net/api/games/{game_id}"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            return response.json()
        else:
            print(f"❌ Game {game_id}: status {response.status_code}")
            return None
    except Exception as e:
        print(f"⚠️ Fout bij game {game_id}: {e}")
        return None

# --- Hoofdprogramma ---
if __name__ == "__main__":
    ids = get_game_ids()
    all_games = []

    for i, gid in enumerate(ids):
        print(f"⬇️ Ophalen game {i+1}/{len(ids)}: {gid}")
        details = fetch_game_details(gid)
        if details:
            all_games.append(details)
        time.sleep(0.5)  # even pauze tussen requests

    print(f"\n📦 {len(all_games)} game details succesvol opgehaald.")

    # Optioneel: bewaar als JSON
    import json
    with open("game_data.json", "w") as f:
        json.dump(all_games, f, indent=2)

    print("💾 Gegevens opgeslagen in game_data.json")
